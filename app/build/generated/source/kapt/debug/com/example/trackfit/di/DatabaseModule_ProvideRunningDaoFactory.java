// Generated by Dagger (https://dagger.dev).
package com.example.trackfit.di;

import com.example.trackfit.database.RunningDatabase;
import com.example.trackfit.database.runDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideRunningDaoFactory implements Factory<runDao> {
  private final Provider<RunningDatabase> databaseProvider;

  public DatabaseModule_ProvideRunningDaoFactory(Provider<RunningDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public runDao get() {
    return provideRunningDao(databaseProvider.get());
  }

  public static DatabaseModule_ProvideRunningDaoFactory create(
      Provider<RunningDatabase> databaseProvider) {
    return new DatabaseModule_ProvideRunningDaoFactory(databaseProvider);
  }

  public static runDao provideRunningDao(RunningDatabase database) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideRunningDao(database));
  }
}
