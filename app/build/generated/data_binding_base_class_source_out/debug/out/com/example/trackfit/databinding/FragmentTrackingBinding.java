// Generated by view binder compiler. Do not edit!
package com.example.trackfit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.trackfit.R;
import com.google.android.gms.maps.MapView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTrackingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnFinishRun;

  @NonNull
  public final MaterialButton btnToggleRun;

  @NonNull
  public final ConstraintLayout clInnerLayout;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final MaterialTextView tvLetsGo;

  @NonNull
  public final MaterialTextView tvTimer;

  private FragmentTrackingBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnFinishRun, @NonNull MaterialButton btnToggleRun,
      @NonNull ConstraintLayout clInnerLayout, @NonNull MapView mapView,
      @NonNull MaterialTextView tvLetsGo, @NonNull MaterialTextView tvTimer) {
    this.rootView = rootView;
    this.btnFinishRun = btnFinishRun;
    this.btnToggleRun = btnToggleRun;
    this.clInnerLayout = clInnerLayout;
    this.mapView = mapView;
    this.tvLetsGo = tvLetsGo;
    this.tvTimer = tvTimer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTrackingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTrackingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tracking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTrackingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFinishRun;
      MaterialButton btnFinishRun = rootView.findViewById(id);
      if (btnFinishRun == null) {
        break missingId;
      }

      id = R.id.btnToggleRun;
      MaterialButton btnToggleRun = rootView.findViewById(id);
      if (btnToggleRun == null) {
        break missingId;
      }

      id = R.id.clInnerLayout;
      ConstraintLayout clInnerLayout = rootView.findViewById(id);
      if (clInnerLayout == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = rootView.findViewById(id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.tvLetsGo;
      MaterialTextView tvLetsGo = rootView.findViewById(id);
      if (tvLetsGo == null) {
        break missingId;
      }

      id = R.id.tvTimer;
      MaterialTextView tvTimer = rootView.findViewById(id);
      if (tvTimer == null) {
        break missingId;
      }

      return new FragmentTrackingBinding((ConstraintLayout) rootView, btnFinishRun, btnToggleRun,
          clInnerLayout, mapView, tvLetsGo, tvTimer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
